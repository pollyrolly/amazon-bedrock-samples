{
    "Comment": "A description of my state machine",
    "StartAt": "Step Functions StartExecution",
    "States": {
      "Step Functions StartExecution": {
        "Type": "Task",
        "Resource": "arn:aws:states:::states:startExecution",
        "Parameters": {
          "StateMachineArn": "arn:aws:states:us-west-2:266726630905:stateMachine:MyStateMachine-ljg0xx184",
          "Input": {
            "QueryList.$": "$.QueryList",
            "Query.$": "$.Query",
            "S3BucketName": "scripts-logger-266726630905-us-west-2",
            "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
          }
        },
        "Next": "Wait",
        "ResultPath": "$.result"
      },
      "Wait": {
        "Type": "Wait",
        "Seconds": 900,
        "Next": "DescribeExecution"
      },
      "DescribeExecution": {
        "Type": "Task",
        "Parameters": {
          "ExecutionArn.$": "$.result.ExecutionArn"
        },
        "Resource": "arn:aws:states:::aws-sdk:sfn:describeExecution",
        "Next": "if_sf_running",
        "InputPath": "$",
        "ResultPath": "$.input"
      },
      "if_sf_running": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.input.Status",
            "StringEquals": "RUNNING",
            "Next": "DescribeExecution"
          }
        ],
        "Default": "ProcessResults",
        "OutputPath": "$"
      },
      "ProcessResults": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "arn:aws:lambda:us-west-2:266726630905:function:process-results:$LATEST"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 1,
            "MaxAttempts": 3,
            "BackoffRate": 2
          }
        ],
        "Next": "if_persistant_error"
      },
      "if_persistant_error": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.rerun",
            "BooleanEquals": true,
            "Next": "Step Functions StartExecution"
          },
          {
            "And": [
              {
                "Variable": "$.succedded",
                "BooleanEquals": false
              },
              {
                "Variable": "$.rerun",
                "BooleanEquals": false
              }
            ],
            "Next": "SNS Publish"
          }
        ],
        "Default": "CreateOutput",
        "OutputPath": "$"
      },
      "CreateOutput": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "arn:aws:lambda:us-west-2:266726630905:function:create-output:$LATEST"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 1,
            "MaxAttempts": 3,
            "BackoffRate": 2
          }
        ],
        "End": true
      },
      "SNS Publish": {
        "Type": "Task",
        "Resource": "arn:aws:states:::sns:publish",
        "Parameters": {
          "Message.$": "$",
          "TopicArn": "arn:aws:sns:us-west-2:266726630905:redshift_review_error_topic_standard"
        },
        "End": true,
        "InputPath": "$.error"
      }
    }
  }